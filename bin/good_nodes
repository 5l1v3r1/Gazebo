#!/usr/bin/perl
#
#  ###################################################################
#
#  Disclaimer and Notice of Copyright 
#  ==================================
#
#  Copyright (c) 2007, Los Alamos National Security, LLC
#  All rights reserved.
#
#  Copyright 2007. Los Alamos National Security, LLC. 
#  This software was produced under U.S. Government contract 
#  DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), 
#  which is operated by Los Alamos National Security, LLC for 
#  the U.S. Department of Energy. The U.S. Government has rights 
#  to use, reproduce, and distribute this software.  NEITHER 
#  THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES 
#  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY 
#  FOR THE USE OF THIS SOFTWARE.  If software is modified to 
#  produce derivative works, such modified software should be 
#  clearly marked, so as not to confuse it with the version 
#  available from LANL.
#
#  Additionally, redistribution and use in source and binary 
#  forms, with or without modification, are permitted provided 
#  that the following conditions are met:
#  -  Redistributions of source code must retain the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer. 
#  -  Redistributions in binary form must reproduce the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  -  Neither the name of Los Alamos National Security, LLC, 
#     Los Alamos National Laboratory, LANL, the U.S. Government, 
#     nor the names of its contributors may be used to endorse 
#     or promote products derived from this software without 
#     specific prior written permission.
#   
#  THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC 
#  AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
#  IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS 
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
#  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
#  OF SUCH DAMAGE.
#
#  ###################################################################



# Description:
# script which prints a list of available nodes managed by this front-end
#
# if "-u name" is entered, "name" is expected to be a segment name
# and we return only the status of nodes for that machine
# if no -u option is entered, all segments are included

use POSIX;
use Getopt::Std;
use File::Basename;


($prog = $0) =~ s!.*/!!;

our %opts;
$opts{u} = "";
getopts("u:",\%opts);

use Cwd 'abs_path';
$pwd = dirname( abs_path("$0") );
chomp($pwd);
do "$pwd/get_gazebo_config";



my ($thisout,$cmd,$util,$seg_name);

    $util = `which showres`;
    chomp $util;
    if (-x "$util") {
#      $cmd  = "$util -n | awk '{ print \$1,\$2}'";
      $cmd  = "$util -f | grep free | awk '{ print \$1}'";
      open(OUT, "$cmd |");
      while ( my $thisout = <OUT> ) {
        if ( "$opts{u}" ne "" ) {  	# only include this CU
           $seg_name = $opts{u};
#           print "$thisout" if ((( $thisout =~ /Idle/ ) || 
#                                ( $thisout =~ /Busy/ )) &&
#                                ( $thisout =~ /$seg_name/ ));
           print "$thisout" if ( $thisout =~ /$seg_name/ );

        } else {			# include all segments

#           if ( qq($gazebo_conf{"Job_Dispatcher"}) eq "moab-cle" ) {
#              my $ks = "3" . "s";
#              my $kd = "0" . "5" . "d";
#              $thisout = sprintf("%$ks%$kd","nid",$thisout);
#              next if $thisout =~ /00000/;
#	   }

           if ($thisout =~ /\n/) {
             print "$thisout";
	   } else {
             print "$thisout\n";
	   }
        }
      }
    } else {
      print "\n";	# return empty string if showres not operational
    }

exit;
 
