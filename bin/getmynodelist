#!/usr/bin/perl
#
#  ###################################################################
#
#  Disclaimer and Notice of Copyright 
#  ==================================
#
#  Copyright (c) 2008, Los Alamos National Security, LLC
#  All rights reserved.
#
#  Copyright 2008. Los Alamos National Security, LLC. 
#  This software was produced under U.S. Government contract 
#  DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), 
#  which is operated by Los Alamos National Security, LLC for 
#  the U.S. Department of Energy. The U.S. Government has rights 
#  to use, reproduce, and distribute this software.  NEITHER 
#  THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES 
#  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY 
#  FOR THE USE OF THIS SOFTWARE.  If software is modified to 
#  produce derivative works, such modified software should be 
#  clearly marked, so as not to confuse it with the version 
#  available from LANL.
#
#  Additionally, redistribution and use in source and binary 
#  forms, with or without modification, are permitted provided 
#  that the following conditions are met:
#  -  Redistributions of source code must retain the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer. 
#  -  Redistributions in binary form must reproduce the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  -  Neither the name of Los Alamos National Security, LLC, 
#     Los Alamos National Laboratory, LANL, the U.S. Government, 
#     nor the names of its contributors may be used to endorse 
#     or promote products derived from this software without 
#     specific prior written permission.
#   
#  THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC 
#  AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
#  IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS 
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
#  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
#  OF SUCH DAMAGE.
#

# Does a "mdiag -j -v --format=xml" to get the list of allocated nodes
# for a job with an assigned job id.
#

use XML::LibXML;
use Sys::Hostname;
use strict;

$| = 1;

# Untaint $0
if ($0 =~ /^([ &:#-\@\w.]+)$/) { $0 = $1; }
else { die "Bad data, exiting.\n"; }

my $myjobid = shift; 
if (!defined $myjobid) {
  print "ERROR: no job id entered, exiting!\n";
  exit;
}

my $mm = `which mdiag`;
chomp($mm);
my $MDIAG = "$mm -j $myjobid -v --format=xml";
my $output = `$MDIAG`;
$output =~ s/^\s+//;
$output =~ s/\s+$//;
my $parser = new XML::LibXML();
my $doc = $parser->parse_string($output);
my $root = $doc->getDocumentElement();

foreach my $jobNode ($root->getChildrenByTagName("job")) {
    my %jobAttr;
    my %reqAttr;

    foreach my $attr ($jobNode->attributes()) {
	my $name  = $attr->nodeName;
	my $value = $attr->nodeValue;
	$jobAttr{$name} = $value;
	#print "$name $value\n";
	#print "$name $value\n" if ( $name eq "JobID" );
    }

    my %seen = ();
    my @uniq = ();
    my @reqNodes = $jobNode->getChildrenByTagName("req");
    foreach my $reqNode (@reqNodes) {
	foreach my $attr ($reqNode->attributes()) {
	    my $name  = $attr->nodeName;
	    my $value = $attr->nodeValue;
	    $reqAttr{$name} = $value;
            #print "req: $name $value\n";
	}
	my $nodelist = $reqAttr{AllocNodeList};
	$nodelist =~ s/:\d//g;
	$nodelist =~ s/,/ /g;
        my @nodelist = sort(/ /, $nodelist);
        # remove any dups of node names
        foreach my $item (@nodelist) {
          push(@uniq, $item) unless $seen{$item}++;
        }
	print "@uniq\n";
    }
}

exit;
