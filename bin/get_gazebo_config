#!/usr/bin/perl
#
#  ###################################################################
#
#  Disclaimer and Notice of Copyright 
#  ==================================
#
#  Copyright (c) 2012, Los Alamos National Security, LLC
#  All rights reserved.
#
#  Copyright 2012. Los Alamos National Security, LLC. 
#  This software was produced under U.S. Government contract 
#  DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), 
#  which is operated by Los Alamos National Security, LLC for 
#  the U.S. Department of Energy. The U.S. Government has rights 
#  to use, reproduce, and distribute this software.  NEITHER 
#  THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES 
#  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY 
#  FOR THE USE OF THIS SOFTWARE.  If software is modified to 
#  produce derivative works, such modified software should be 
#  clearly marked, so as not to confuse it with the version 
#  available from LANL.
#
#  Additionally, redistribution and use in source and binary 
#  forms, with or without modification, are permitted provided 
#  that the following conditions are met:
#  -  Redistributions of source code must retain the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer. 
#  -  Redistributions in binary form must reproduce the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  -  Neither the name of Los Alamos National Security, LLC, 
#     Los Alamos National Laboratory, LANL, the U.S. Government, 
#     nor the names of its contributors may be used to endorse 
#     or promote products derived from this software without 
#     specific prior written permission.
#   
#  THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC 
#  AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
#  IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS 
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
#  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
#  OF SUCH DAMAGE.
#
#  ###################################################################


# Description:
# Utility script used by a number of other Perl programs which  
# creates a hash called gazebo_conf.  The hash contains all the values defined
# in the config file "gazebo.conf".

our %gazebo_conf;
my $key;
my $value;

die "$0: no Gazebo env directory (GZHOME) defined\n"
   unless (exists ($ENV{GZHOME}));
our $GazeboHome = $ENV{'GZHOME'};

my $config_file = "$GazeboHome/gazebo.conf";

# WARNING: do not leave any uncommented print statements in this script
#print "\n  $0: examining -  $config_file\n\n";

open(CONFIG, "$config_file") || die("$0: Opening $config_file failed: $!\n");

while (<CONFIG>) {
    chomp;                  # no newline
    s/#.*//;                # no comments
    s/^\s+//;               # no leading white
    s/\s+$//;               # no trailing white
    next unless length;     # anything left?
    ($key, $value) = split(/ /, $_, 2);
    if ($value) { 
      chomp $value;
    } else { $value = ""; }
    $value =~ s/\s+//;
    if (exists $gazebo_conf{$key}) {
      print "\n*** Error:\n Duplicate configuration key ($key) exists in gazebo.conf file!\n Correct before proceeding.\n\n";
      return (0);
    }
    $value =~ s/\$\{?USER\}?/$ENV{'USER'}/;
    $gazebo_conf{$key} = $value;
} 

# example usage
# print all the hash values
#my $k;
#foreach $k (sort keys %gazebo_conf) {
#    print "$k: $gazebo_conf{$k}\n";
#}

# usage of a single value
#my $val = $gazebo_conf{'Test_Home'}; 
#print " val is $val\n";
#print "$gazebo_conf{'Cluster_Segments'}\n";

1;
