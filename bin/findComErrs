#!/bin/tcsh


#  ###################################################################
#
#  Disclaimer and Notice of Copyright 
#  ==================================
#
#  Copyright (c) 2015, Los Alamos National Security, LLC
#  All rights reserved.
#
#  Copyright 2015. Los Alamos National Security, LLC. 
#  This software was produced under U.S. Government contract 
#  DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), 
#  which is operated by Los Alamos National Security, LLC for 
#  the U.S. Department of Energy. The U.S. Government has rights 
#  to use, reproduce, and distribute this software.  NEITHER 
#  THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES 
#  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY 
#  FOR THE USE OF THIS SOFTWARE.  If software is modified to 
#  produce derivative works, such modified software should be 
#  clearly marked, so as not to confuse it with the version 
#  available from LANL.
#
#  Additionally, redistribution and use in source and binary 
#  forms, with or without modification, are permitted provided 
#  that the following conditions are met:
#  -  Redistributions of source code must retain the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer. 
#  -  Redistributions in binary form must reproduce the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  -  Neither the name of Los Alamos National Security, LLC, 
#     Los Alamos National Laboratory, LANL, the U.S. Government, 
#     nor the names of its contributors may be used to endorse 
#     or promote products derived from this software without 
#     specific prior written permission.
#   
#  THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC 
#  AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
#  IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS 
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
#  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
#  OF SUCH DAMAGE.
#
#  ###################################################################


# Find Common Errors
# Utility used to search for commonly seen errors in any file in the log directory.
# This is somewhat fluid and will probably vary from one platform to the next.

# input: none, need to edit dates currently
# output: files placed in GHOME corresponding to each date searched 
#  containing separate lines of the form "jobId reason-string"


# code starts searching at the top level of the day in the results directory specified by date 
# something like : /home/gazebo/atc-results-must/gzshared/2011/2011-08/2011-08-26

# work to do...
# 1) get result dir from gazebo.conf
# 2) handle dates as input instead of editing file
# 3) possibly replace findgrep with "grep -r". findgrep is nice, but not everywhere



set mo = "11" 
set yr = "2011"

foreach da ( 18 19 20 21 )

  cd /home/gazebo/atc-results-caddy/gzshared/${yr}/${yr}-${mo}/${yr}-${mo}-${da}

  set outfile = ${GZHOME}/comErrs.${yr}-${mo}-${da}
  echo "Writing $outfile"

  echo "# JobId Reason" > ${outfile}

 /usr/bin/findgrep . -c "RETRY EXCEEDED ERROR" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {printf ("%s %s to %s\n", jobid, $4, $6)}}' | grep "localdomain to mu" | sort -n | uniq | awk -F '.' '{printf("%s %s %s\n", $2, $(NF-1), $NF)}' | awk '{split( $1, a, "__") ; printf("%s Retry Exceeded Error to %s\n",  a[3], $6)}' | uniq > ${outfile}

  /usr/bin/findgrep . -c "TIME LIMIT" | sort -n | awk -F '.' '{printf("%s\n", $2)}' | awk '{split( $1, a, "__") ; if ( NF > 0 ) printf("%s Time Limit Exceeded\n",  a[3] )}' >> ${outfile}

  /usr/bin/findgrep . -c  "CANCELLED AT" | sort -n | awk -F '.' '{printf("%s\n", $2)}' | awk '{split( $1, a, "__") ; if ( NF > 0 ) printf("%s Job canceled by admin\n",  a[3] )}' >> ${outfile}

  /usr/bin/findgrep . "FAIL: below" | uniq | sort -n | awk -F '.' '{printf("%s\n", $2)}' | awk '{split( $1, a, "__") ; printf("%s HPL below efficiency minimum of 50%%\n",  a[3] )}'  >> ${outfile}

  /usr/bin/findgrep -c "mca_oob_tcp_msg" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {split( $2, a, ".") ; printf ("%s %s %s %s %s\n", jobid, $4, $5, $6,  a[1])}}' |  awk '{split( $1, a, "__") ; printf("%s %s %s %s %s\n", a[3], $2, $3, $4, substr( $5, 2 ) )}'  | uniq >> ${outfile}

  findgrep -c "NODE FAILURE" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {split( $2, a, ".") ; printf ("%s %s %s %s %s\n", jobid, $4, $5, $6,  a[1])}}' | awk '{split( $1, a, "__") ; printf("%s %s due to node failure at %s\n", a[3], $4, substr( $5, 8, 6 ) )}' | sort -n | uniq  >> ${outfile}

  /usr/bin/findgrep . -c "daemon did not report back when launched" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {printf ("%s %s\n", jobid, $2 )}}' | awk '{split( $1, a, "__") ; printf("%s mpi daemon did not report back when launched %s\n", a[3], $2  )}' | sort -n | uniq >> ${outfile}

  /usr/bin/findgrep . -c "EXECUTABLE EXPIRED" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {printf ("%s %s %s\n", jobid, $2, $3)}}' | sort -n | uniq | awk -F '.' '{printf("%s %s %s\n", $2, $(NF-1), $NF)}' | awk '{split( $1, a, "__") ; printf("%s %s %s\n",  a[3], $4, "license expired") }' | uniq >> ${outfile}

  /usr/bin/findgrep -c "joblogfile missing" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {split( $2, a, ".") ; printf ("%s %s %s %s %s\n", jobid, $4, $5, $6,  a[1])}}' | awk '{split( $1, a, "__") ; printf("%s %s %s\n", a[3], $2, $3 )}'  | uniq >> ${outfile}

  /usr/bin/findgrep -c "PSM EP connect" | awk '{if (NF==1) {jobid=$1} else if (NF>1) {split( $2, a, ".") ; printf ("%s %s %s %s %s\n", jobid, $4, $5, $6,  a[1])}}' | awk '{split( $1, a, "__") ; printf("%s %s\n", a[3], "PSM EP connect error")}' | uniq >> ${outfile}

end

exit
